<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--扫描springmvc的@Controller和@ControllerAdvice注解的类-->
    <context:component-scan base-package="com.liukai.myguzz.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--开启springmvc注解驱动-->
    <mvc:annotation-driven/>

    <!--处理静态资源-->
    <mvc:default-servlet-handler/>

    <!-- 用于将对象转换为 JSON -->
    <bean id="jsonConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>

    <!--视图解析器-->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.JstlView</value>
        </property>
        <property name="prefix">
            <value>/WEB-INF/view/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
        <property name="contentType">
            <value>text/html;charset=UTF8</value>
        </property>
    </bean>

    <!--文件上传解析类-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>104857600</value>
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>

    <!--配置国际化资源文件，注意basename的value值，需要对应资源文件-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n"></property>
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!--集成异常处理 -->
    <!--方案一：使用SimpleMappingExceptionResolver实现异常处理 -->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--&lt;!&ndash; 定义默认的异常处理页面，当该异常类型的注册时使用 &ndash;&gt;-->
        <!--<property name="defaultErrorView" value="/error/error"></property>-->
        <!--&lt;!&ndash; 定义异常处理页面用来获取异常信息的变量名，默认名为exception &ndash;&gt;-->
        <!--<property name="exceptionAttribute" value="ex"></property>-->
        <!--&lt;!&ndash; 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 &ndash;&gt;-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--<prop key="com.liukai.myguzz.exception.DataParseException">/error/error-dataparse</prop>-->
                <!--<prop key="com.liukai.myguzz.exception.InvalidParamException">/error/error-invalidparam</prop>-->
                <!--<prop key="com.liukai.myguzz.exception.UnknownException">/error/error-unknown</prop>-->

                <!--&lt;!&ndash; 这里还可以继续扩展对不同异常类型的处理 &ndash;&gt;-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--方案二：实现HandlerExceptionResolver 接口自定义异常处理器-->
    <!--<bean id="myExceptionHandler" class="com.liukai.myguzz.exception.handler.MyExceptionHandler"/>-->

    <!--方案三：使用@ExceptionHandler注解实现异常处理 -->

</beans>